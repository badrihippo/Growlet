<Page
    class="page"
    navigatingTo="onNavigatingTo"  
    xmlns:nsDrawer="nativescript-pro-ui/sidedrawer"
    xmlns:myDrawer="shared/my-drawer"
    xmlns:FAB="nativescript-floatingactionbutton"
    xmlns="http://www.nativescript.org/tns.xsd">

    <ActionBar class="action-bar">
        <!-- 
        Use the NavigationButton as a side-drawer button in Android because ActionItems are shown on the right side of the ActionBar
        -->
        <NavigationButton ios:visibility="collapsed" icon="res://menu" tap="onDrawerButtonTap"></NavigationButton>
        <!-- 
        Use the ActionItem for IOS with position set to left. Using the NavigationButton as a side-drawer button in iOS is not possible, because its function is to always navigate back in the application.
        -->
        <ActionItem icon="res://navigation/menu" 
            android:visibility="collapsed" 
            tap="onDrawerButtonTap"
            ios.position="left">
        </ActionItem>
        <Label class="action-bar-title" text="Home"></Label>
        <ActionItem tap="onAddTap" icon="res://ic_add_white_24dp"/>
    </ActionBar>

    <!--
    RadSideDrawer is a UI component part of the Progress NativeScript UI set of components.
    Learn more about the RadSideDrawer UI component and how it can be customized in this documentation article:
    http://docs.telerik.com/devtools/nativescript-ui/Controls/NativeScript/SideDrawer/getting-started
    The RadSideDrawer component is designed to be used as a root element to the <Page> and
    it shouldn't have any other siblings other than the <ActionBar> component.
    -->
    <nsDrawer:RadSideDrawer id="sideDrawer" showOverNavigation="true">
        <!--
        Use the RadSideDrawer.drawerTransition component to change the open/close animation of the drawer.
        -->
        <nsDrawer:RadSideDrawer.drawerTransition>
            <nsDrawer:SlideInOnTopTransition/>
        </nsDrawer:RadSideDrawer.drawerTransition>

        <!--
        Use the RadSideDrawer.drawerContent component to display the content of the app drawer on this page.
        Always wrap content in a layout component.
        -->
        <nsDrawer:RadSideDrawer.drawerContent>
            <StackLayout>
                <!--
                Use {N} custom components to reuse UI across your mobile app.
                The MyDrawer custom component defined in "/shared/my-drawer" holds the contents of the app drawer.
                Learn more about custom components and how they can be used in this documentation article:
                http://docs.nativescript.org/ui/basics#custom-components
                -->
                <myDrawer:MyDrawer selectedPage="Home"/>
            </StackLayout>
        </nsDrawer:RadSideDrawer.drawerContent>

        <!--
        Use the RadSideDrawer.mainContent component to display the content of the page when you have an app drawer.
        Always wrap content in a layout component.
        -->
        <nsDrawer:RadSideDrawer.mainContent>
            <GridLayout class="page-content" rows="auto, *">
                <StackLayout class="m-10" visibility="{{ bookList.length == 0 ? 'visible' : 'collapse' }}">
                    <Label class="page-icon fa" text="&#xf1ea;"></Label>
                    <Label class="page-placeholder text-center" text="No books yet!" textWrap="true"></Label>
                    <Label class="page-placeholder text-center"  text="Tap the '+' icon to add one." textWrap="true"></Label>
                </StackLayout>
                <ListView row="1" items="{{ bookList }}" class="item-list" itemTap="onItemTap" visibility="{{ bookList.length != 0 ? 'visible' : 'collapse' }}">
                    <ListView.itemTemplate>
                        <StackLayout orientation="horizontal">
                            <Label class="item-icon fa" text="&#xf02e;" />
                            <StackLayout>
                                <Label text="{{ title }}" class="item-title" />
                                <!--TODO: Show authors in a better way -->
                                <Label text="{{ authors, 'by ' + authors[0].name + (authors.length >1 ? ' +' + (authors.length-1) : '') }}" />
                            </StackLayout>
                        </StackLayout>
                    </ListView.itemTemplate>
                </ListView>
                <FAB:fab row="1" icon="res://ic_add_white_24dp" class="fab-button" tap="onAddTap"/>
            </GridLayout>
        </nsDrawer:RadSideDrawer.mainContent>
    </nsDrawer:RadSideDrawer>
</Page>
